class MinStack:

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.s = []
        self.min_element = None

    def push(self, val: int) -> None:
        if(self.min_element is None):
            self.min_element = val
            self.s.append(val)
        else:
            if(self.min_element > val):
                self.s.append(2*val - self.min_element)
                self.min_element = val
            else:
                self.s.append(val)
                
            

    def pop(self) -> None:
        pop_val = self.s.pop()
        if(pop_val<self.min_element):
            self.min_element = 2*self.min_element +(-1* pop_val)
        if(len(self.s)==0):
            self.min_element = None
            
        
        

    def top(self) -> int:
        return self.min_element if self.s[-1]< self.min_element else self.s[-1]

    def getMin(self) -> int:
        return self.min_element


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
